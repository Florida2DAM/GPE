{"version":3,"sources":["components/LotsView.js","components/ArticlesView.js","components/ReportsView.js","components/ClientsView.js","components/EmployeesView.js","components/OrdersView.js","App.js","reportWebVitals.js","index.js"],"names":["axios","require","LotsView","props","getLots","get","api","then","response","setState","bets","data","GPEAlert","createRef","state","lots","this","ref","header","className","value","userId","onChange","handlerEmail","disabled","marketId","eventId","placeholder","style","width","handlerMarketId","handlerEventId","label","icon","onClick","resetStates","backgroundColor","filterButton","textAlign","field","createMarkets","lockMarket","unlockMarket","color","markets","React","ArticlesView","getArticles","forEach","item","Enabled","articles","local","handlerLocal","visitant","handlerVisitant","date","handlerDate","createEvents","eventos","updateDate","deleteEvents","ReportsView","getBetsDate","betsDate","getBetsCount","betsCount","getUsersDate","usersDate","getUsersCount","usersCount","betsData","labels","datasets","fill","borderColor","usersData","chartOptions","legend","fontColor","scales","xAxes","ticks","yAxes","type","options","moment","ClientsView","getClients","RegisterDate","format","clients","email","name","surname","handlerName","handlerSurname","buttonFilter","deleteUsers","oldPwd","handlerOldPwd","newPwd","handlerNewPwd","confirmPwd","handlerConfirmPwd","changePassword","EmployeesView","getEmployees","employees","OrdersView","getOrders","Date","DeriveryDate","Delivered","Paid","orders","App","to","activeClassName","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.761f8c9f.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport {createRef, Fragment} from 'react';\r\nimport '../App.css';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {TabPanel, TabView} from 'primereact/tabview';\r\nimport {Toast} from 'primereact/toast';\r\n\r\nconst axios = require('axios');\r\nconst apiPort = '44388';\r\nconst api = 'https://localhost:' + apiPort + '/api/';\r\n\r\nexport class LotsView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.GPEAlert = createRef();\r\n        this.state = {\r\n            lots: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLots();\r\n    }\r\n\r\n    getLots = () => {\r\n        axios.get(api + 'Lots').then((response) => {\r\n            this.setState({bets: response.data});\r\n        })\r\n    }\r\n    // getMarkets = () => {\r\n    //     axios.get(api+'Mercados').then((response) => {\r\n    //         response.data.forEach(item => {\r\n    //             if (item.Bloqueado === true) {\r\n    //                 item.Bloqueado = 'Si';\r\n    //             } else {\r\n    //                 item.Bloqueado = 'No';\r\n    //             }\r\n    //             item.DineroOver += '€';\r\n    //             item.DineroUnder += '€';\r\n    //         });\r\n    //         this.setState({markets: response.data});\r\n    //     })\r\n    // }\r\n    //\r\n    // filterMail = () => {\r\n    //     axios.get(api+'Apuestas/GetEmail?UsuarioId=' + this.state.userId).then((response) => {\r\n    //         response.data.forEach(item => {\r\n    //             item.FechaApuesta = moment(item.FechaApuesta).format('YYYY-MM-DD');\r\n    //             item.DineroApostado = item.DineroApostado + '€';\r\n    //         })\r\n    //         this.setState({bets: response.data});\r\n    //         this.showSuccessToast();\r\n    //     })\r\n    // }\r\n    // filterMarket = () => {\r\n    //     axios.get(api+'Apuestas/GetMercado?MercadoId=' + this.state.marketId).then((response) => {\r\n    //         response.data.forEach(item => {\r\n    //             item.FechaApuesta = moment(item.FechaApuesta).format('YYYY-MM-DD');\r\n    //             item.DineroApostado = item.DineroApostado + '€';\r\n    //         })\r\n    //         this.setState({bets: response.data});\r\n    //         this.showSuccessToast();\r\n    //     })\r\n    // }\r\n    // filterEvent = () => {\r\n    //     axios.get(api+'Apuestas/GetEvento?EventoId=' + this.state.eventId).then((response) => {\r\n    //         response.data.forEach(item => {\r\n    //             item.FechaApuesta = moment(item.FechaApuesta).format('YYYY-MM-DD');\r\n    //             item.DineroApostado = item.DineroApostado + '€';\r\n    //         })\r\n    //         this.setState({bets: response.data});\r\n    //         this.showSuccessToast();\r\n    //     })\r\n    // }\r\n    // createMarkets = () => {\r\n    //     axios.post(api+'Mercados?EventoId=' + this.state.eventId).then(() => {\r\n    //         this.showInfoSuccessToast('Mercados para el evento ' + this.state.eventId + ' creados');\r\n    //         this.resetStates();\r\n    //         this.getMarkets();\r\n    //     })\r\n    //         .catch(error => {\r\n    //             this.showErrorToast(error.message.toString() + '\\nCompruebe la conexión y que haya introducido el ID de Evento para realizar la inserción de nuevos mercados');\r\n    //         });\r\n    // }\r\n    // lockMarket = () => {\r\n    //     axios.get(api+'Mercados/Locked?MercadoId=' + this.state.marketId).then((response) => {\r\n    //         if (response.data.Bloqueado) {\r\n    //             this.showErrorToast('Este mercado ya esta bloqueado');\r\n    //             this.resetStates();\r\n    //         } else {\r\n    //             axios.put(api+'Mercados/Lock?MercadoId=' + this.state.marketId).then(() => {\r\n    //                 this.showInfoSuccessToast('Mercado ' + this.state.marketId + ' bloqueado');\r\n    //                 this.resetStates();\r\n    //                 this.getMarkets();\r\n    //             })\r\n    //                 .catch(error => {\r\n    //                     this.showErrorToast(error.message.toString() + '\\nCompruebe la conexión y que ha introducido el ID de Mercado a bloquear correcto.');\r\n    //                 });\r\n    //         }\r\n    //     });\r\n    // }\r\n    // unlockMarket = () => {\r\n    //     axios.get(api+'Mercados/Locked?MercadoId=' + this.state.marketId).then((response) => {\r\n    //         if (!response.data.Bloqueado) {\r\n    //             this.showErrorToast('Este mercado ya esta desbloqueado');\r\n    //             this.resetStates();\r\n    //         } else {\r\n    //             axios.put(api+'Mercados/Unlock?MercadoId=' + this.state.marketId).then(() => {\r\n    //                 this.showInfoSuccessToast('Mercado ' + this.state.marketId + ' desbloqueado');\r\n    //                 this.resetStates();\r\n    //                 this.getMarkets();\r\n    //             })\r\n    //                 .catch(error => {\r\n    //                     this.showErrorToast(error.message.toString() + '\\nCompruebe la conexión y que ha introducido el ID de Mercado a desbloquear correcto.');\r\n    //                 });\r\n    //         }\r\n    //     });\r\n    // }\r\n    //\r\n    // handlerEmail = (event) => {\r\n    //     this.setState({userId: event.target.value});\r\n    // }\r\n    // handlerMarketId = (event) => {\r\n    //     this.setState({marketId: event.target.value});\r\n    // }\r\n    // handlerEventId = (event) => {\r\n    //     this.setState({eventId: event.target.value});\r\n    // }\r\n    //\r\n    // resetStates = () => {\r\n    //     this.getLots();\r\n    //     this.setState({userId: ''});\r\n    //     this.setState({marketId: ''});\r\n    //     this.setState({eventId: ''});\r\n    // }\r\n    //\r\n    // filterButton = () => {\r\n    //     if (this.state.userId) {\r\n    //         this.filterMail();\r\n    //     }\r\n    //     if (this.state.marketId) {\r\n    //         this.filterMarket();\r\n    //     }\r\n    //     if (this.state.eventId) {\r\n    //         this.filterEvent();\r\n    //     }\r\n    // }\r\n    // showSuccess = () => {\r\n    //     this.GPEAlert.current.show({severity: 'success', summary: 'Hecho', life: 3000});\r\n    // }\r\n    //\r\n    // showInfoSuccess = (detailValue) => {\r\n    //     this.GPEAlert.current.show({severity: 'success', summary: 'Hecho', detail: detailValue, life: 3000});\r\n    // }\r\n    //\r\n    // showError = (error) => {\r\n    //     this.GPEAlert.current.show({severity: 'error', summary: 'Error', detail: error, sticky: true});\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Toast ref={this.GPEAlert}/>\r\n                <TabView>\r\n                    <TabPanel header='Lots'>\r\n                        <div className='flexCenter'>\r\n                            <InputText value={this.state.userId} onChange={this.handlerEmail}\r\n                                       disabled={this.state.marketId || this.state.eventId} placeholder='Email'\r\n                                       style={{width: '40%'}}/>\r\n                            <InputText value={this.state.marketId} onChange={this.handlerMarketId}\r\n                                       disabled={this.state.userId || this.state.eventId} placeholder='Id Mercado'/>\r\n                            <InputText value={this.state.eventId} onChange={this.handlerEventId}\r\n                                       disabled={this.state.marketId || this.state.userId}\r\n                                       placeholder='ID Evento' style={{width: '15%'}}/>\r\n                            <Button label='Actualizar' icon='pi pi-refresh' onClick={this.resetStates}\r\n                                    className='p-button-secondary p-mr-2'\r\n                                    style={{backgroundColor: '#86AEC2'}}/>\r\n                            <Button label='Filtrar' icon='pi pi-filter' onClick={this.filterButton}\r\n                                    className='p-button-secondary p-mr-2'/>\r\n                        </div>\r\n                        <div>\r\n                            <DataTable value={this.state.bets}>\r\n                                <Column style={{textAlign: 'center', width: '12%'}} field='ArticleId'\r\n                                        header='ArticleId'/>\r\n                                <Column style={{textAlign: 'center', width: '9%'}} field='LotId' header='LotId'/>\r\n                                <Column style={{textAlign: 'center', width: '11%'}} field='Stock'\r\n                                        header='Stock'/>\r\n                            </DataTable>\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel header='New Lot'>\r\n                        <div className='flexCenter'>\r\n                            <div className='marketsInputs'>\r\n                                <InputText value={this.state.eventId} onChange={this.handlerEventId}\r\n                                           disabled={this.state.marketId}\r\n                                           placeholder='ID Evento' style={{width: '220px'}}/>\r\n                                <div className='flexCenter'>\r\n                                    <Button label='Crear Mercados' icon='pi pi-plus' onClick={this.createMarkets}\r\n                                            className='p-button-secondary p-mr-2' style={{width: '220px'}}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className='marketsInputs'>\r\n                                <InputText value={this.state.marketId} onChange={this.handlerMarketId}\r\n                                           disabled={this.state.eventId}\r\n                                           placeholder='Id de mercado' style={{width: '270px'}}/>\r\n                                <div className='flexCenter'>\r\n                                    <Button label='Bloquear' icon='pi pi-lock' onClick={this.lockMarket}\r\n                                            className='p-button-secondary p-mr-2' style={{backgroundColor: '#CA3C25'}}/>\r\n                                    <Button label='Desbloquear' icon='pi pi-unlock' onClick={this.unlockMarket}\r\n                                            className='p-button-secondary p-mr-2'\r\n                                            style={{backgroundColor: '#77FF94', color: 'black'}}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <DataTable value={this.state.markets}>\r\n                                <Column style={{textAlign: 'center', width: '14%'}} field='MercadoId'\r\n                                        header='ID Mercado'/>\r\n                                <Column style={{textAlign: 'center', width: '10%'}} field='OverUnder'\r\n                                        header='Tipo Mercado'/>\r\n                                <Column style={{textAlign: 'center'}} field='CuotaOver' header='Cuota Over'/>\r\n                                <Column style={{textAlign: 'center'}} field='CuotaUnder' header='Cuota Under'/>\r\n                                <Column style={{textAlign: 'center'}} field='DineroOver' header='Dinero Over'/>\r\n                                <Column style={{textAlign: 'center'}} field='DineroUnder' header='Dinero Under'/>\r\n                                <Column style={{textAlign: 'center', width: '14%'}} field='Bloqueado'\r\n                                        header='Bloqueado'/>\r\n                                <Column style={{textAlign: 'center', width: '12%'}} field='EventoId'\r\n                                        header='ID Evento'/>\r\n                            </DataTable>\r\n                        </div>\r\n                    </TabPanel>\r\n                </TabView>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {createRef, Fragment} from 'react';\r\nimport '../App.css';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {TabPanel, TabView} from 'primereact/tabview';\r\nimport {Toast} from 'primereact/toast';\r\n\r\nconst axios = require('axios');\r\n\r\nconst apiPort = '44388';\r\nconst api = 'https://localhost:' + apiPort + '/api/';\r\n\r\nexport class ArticlesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.GPEAlert = createRef();\r\n        this.state = {\r\n            articles: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getArticles();\r\n    }\r\n\r\n    getArticles = () => {\r\n        axios.get(api + 'Articles').then((response) => {\r\n            response.data.forEach(item => {\r\n                if (item.Enabled === true) {\r\n                    item.Enabled = 'Yes';\r\n                } else {\r\n                    item.Enabled = 'No';\r\n                }\r\n            });\r\n            this.setState({articles: response.data});\r\n        })\r\n    }\r\n    // articleById = () => {\r\n    //     axios.get(api + 'Articles/GetLocal?Local=' + this.state.local).then((response) => {\r\n    //         response.data.forEach(item => {\r\n    //             item.Fecha = moment(item.Fecha).format('YYYY-MM-DD HH:mm:ss');\r\n    //         })\r\n    //         this.setState({eventos: response.data});\r\n    //         this.showSuccess();\r\n    //     })\r\n    // }\r\n    // articleByDescrip = () => {\r\n    //     axios.get(api + 'Articles/GetVisitante?Visitante=' + this.state.visitant).then((response) => {\r\n    //         response.data.forEach(item => {\r\n    //             item.Fecha = moment(item.Fecha).format('YYYY-MM-DD HH:mm:ss');\r\n    //         })\r\n    //         this.setState({eventos: response.data});\r\n    //         this.showSuccess();\r\n    //     })\r\n    // }\r\n    // articleByBrand\r\n    //     = () => {\r\n    //     axios.get(api + 'Articles/GetDate?Fecha=' + this.state.date).then((response) => {\r\n    //         response.data.forEach(item => {\r\n    //             item.Fecha = moment(item.Fecha).format('YYYY-MM-DD HH:mm:ss');\r\n    //         })\r\n    //         this.setState({eventos: response.data});\r\n    //         this.showSuccess();\r\n    //     })\r\n    // }\r\n    // articleEnabled\r\n    //     = () => {\r\n    //     axios.get(api + 'Articles/GetDate?Fecha=' + this.state.date).then((response) => {\r\n    //         response.data.forEach(item => {\r\n    //             item.Fecha = moment(item.Fecha).format('YYYY-MM-DD HH:mm:ss');\r\n    //         })\r\n    //         this.setState({eventos: response.data});\r\n    //         this.showSuccess();\r\n    //     })\r\n    // }\r\n    // createEvents = () => {\r\n    //     if (this.state.local && this.state.visitant && this.state.date) {\r\n    //         let createEvent = {\r\n    //             Local: this.state.local,\r\n    //             Visitante: this.state.visitant,\r\n    //             Fecha: moment(this.state.date).format('YYYY-MM-DD HH:mm:ss')\r\n    //         }\r\n    //         axios.post(api + 'Articles', createEvent).then((response) => {\r\n    //             this.showInfoSuccess('Evento creado');\r\n    //         })\r\n    //             .then(this.resetStates)\r\n    //             .catch(error => {\r\n    //                 this.showError(error.message.toString() + '\\nCompruebe la conexión y que haya introducido los equipos y la fecha.');\r\n    //             });\r\n    //     } else {\r\n    //         this.showError('Compruebe la conexión y que haya introducido los equipos y la fecha.');\r\n    //     }\r\n    // }\r\n    // deleteEvents = () => {\r\n    //     axios.delete(api + 'Articles?EventoId=' + this.state.eventId).then((response) => {\r\n    //         this.showInfoSuccess('Evento: ' + this.state.eventId + ' eliminado.');\r\n    //     })\r\n    //         .then(this.resetStates)\r\n    //         .catch(error => {\r\n    //             this.showError(error.message.toString() + '\\nCompruebe la conexión y que haya introducido el ID de evento.');\r\n    //         });\r\n    // }\r\n    // updateDate = () => {\r\n    //     let dateFormated = moment(this.state.date).format('YYYY-MM-DD HH:mm:ss');\r\n    //     axios.put(api + 'Articles/NewDate?EventoId=' + this.state.eventId + '&Fecha=' + dateFormated).then((response) => {\r\n    //         this.showInfoSuccess('Fecha actualizada para el evento: ' + this.state.eventId);\r\n    //     })\r\n    //         .then(this.resetStates)\r\n    //         .catch(error => {\r\n    //             this.showError(error.message.toString() + '\\nCompruebe la conexión y que ha introducido la fecha y el ID de evento.');\r\n    //         });\r\n    // }\r\n\r\n    // handlerLocal = (event) => {\r\n    //     this.setState({local: event.target.value});\r\n    // }\r\n    // handlerVisitant = (event) => {\r\n    //     this.setState({visitant: event.target.value});\r\n    // }\r\n    // handlerDate = (event) => {\r\n    //     this.setState({date: event.target.value});\r\n    // }\r\n    // handlerEventId = (event) => {\r\n    //     this.setState({eventId: event.target.value});\r\n    // }\r\n    //\r\n    // resetStates = () => {\r\n    //     this.getArticles();\r\n    //     this.setState({local: ''});\r\n    //     this.setState({visitant: ''});\r\n    //     this.setState({date: ''});\r\n    //     this.setState({eventId: ''});\r\n    // }\r\n\r\n    // filterButton = () => {\r\n    //     if (this.state.local) {\r\n    //         this.articleById();\r\n    //     }\r\n    //     if (this.state.visitant) {\r\n    //         this.articleByDescrip();\r\n    //     }\r\n    //     if (this.state.date) {\r\n    //         this.articleByBrand\r\n    //         ();\r\n    //     }\r\n    // }\r\n    //\r\n    // showSuccess = () => {\r\n    //     this.GPEAlert.current.show({severity: 'success', summary: 'Hecho', life: 3000});\r\n    // }\r\n    //\r\n    // showInfoSuccess = (detailValue) => {\r\n    //     this.GPEAlert.current.show({severity: 'success', summary: 'Hecho', detail: detailValue, life: 3000});\r\n    // }\r\n    //\r\n    // showError = (error) => {\r\n    //     this.GPEAlert.current.show({severity: 'error', summary: 'Error', detail: error, sticky: true});\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Toast ref={this.GPEAlert}/>\r\n                <TabView>\r\n                    <TabPanel header='Articles'>\r\n                        <div className='flexCenter'>\r\n                            <InputText value={this.state.local} onChange={this.handlerLocal}\r\n                                       placeholder='Equipo local'/>\r\n                            <InputText value={this.state.visitant} onChange={this.handlerVisitant}\r\n                                       placeholder='Equipo visitante'/>\r\n                            <InputText value={this.state.date} onChange={this.handlerDate} disabled={this.state.eventId}\r\n                                       placeholder='Fecha: 2000-01-01 00:00:00' style={{width: '230px'}}/>\r\n                            <Button label='Actualizar' icon='pi pi-refresh' onClick={this.resetStates}\r\n                                    className='p-button-secondary p-mr-2'\r\n                                    style={{backgroundColor: '#86AEC2'}}/>\r\n                            <Button label='Filtrar' icon='pi pi-filter' onClick={this.filterButton}\r\n                                    className='p-button-secondary p-mr-2'/>\r\n                        </div>\r\n                        <div>\r\n                            <DataTable value={this.state.articles}>\r\n                                <Column style={{textAlign: 'center', width: '15%'}} field='ArticleId'\r\n                                        header='Id'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='Description'\r\n                                        header='Description'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='Brand'\r\n                                        header='Brand'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='Category'\r\n                                        header='Category'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='Price'\r\n                                        header='Price'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='Iva'\r\n                                        header='IVA'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='Enabled' header='Enabled'/>\r\n                            </DataTable>\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel header='New Articles'>\r\n                        <div className='flexCenter'>\r\n                            <InputText value={this.state.local} onChange={this.handlerLocal}\r\n                                       placeholder='Equipo local'/>\r\n                            <InputText value={this.state.visitant} onChange={this.handlerVisitant}\r\n                                       placeholder='Equipo visitante'/>\r\n                            <InputText value={this.state.date} onChange={this.handlerDate}\r\n                                       placeholder='Fecha Ej: 2000-01-01 00:00:00' style={{width: '230px'}}/>\r\n                            <Button label='Crear' icon='pi pi-plus' onClick={this.createEvents}\r\n                                    className='p-button-secondary p-mr-2'/>\r\n                        </div>\r\n                        <div>\r\n                            <DataTable value={this.state.eventos}>\r\n                                <Column style={{textAlign: 'center', width: '15%'}} field='EventoId'\r\n                                        header='ID Evento'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='Local'\r\n                                        header='Equipo Local'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='Visitante'\r\n                                        header='Equipo Visitante'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='Fecha' header='Fecha'/>\r\n                            </DataTable>\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel header='Modify Articles'>\r\n                        <div className='flexCenter'>\r\n                            <InputText value={this.state.eventId} onChange={this.handlerEventId}\r\n                                       placeholder='IdEvento'/>\r\n                            <InputText value={this.state.date} onChange={this.handlerDate}\r\n                                       placeholder='Fecha Ej: 2000-01-01 00:00:00' style={{width: '230px'}}/>\r\n                            <Button label='Modificar' icon='pi pi-pencil' onClick={this.updateDate}\r\n                                    className='p-button-secondary p-mr-2'/>\r\n                        </div>\r\n                        <div>\r\n                            <DataTable value={this.state.eventos}>\r\n                                <Column style={{textAlign: 'center', width: '15%'}} field='EventoId'\r\n                                        header='ID Evento'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='Local'\r\n                                        header='Equipo Local'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='Visitante'\r\n                                        header='Equipo Visitante'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='Fecha' header='Fecha'/>\r\n                            </DataTable>\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel header='Eliminar Articles'>\r\n                        <div className='flexCenter'>\r\n                            <InputText value={this.state.eventId} onChange={this.handlerEventId}\r\n                                       placeholder='ID evento'/>\r\n                            <Button label='Eliminar' icon='pi pi-trash' onClick={this.deleteEvents}\r\n                                    className='p-button-secondary p-mr-2'/>\r\n                        </div>\r\n                        <div>\r\n                            <DataTable value={this.state.eventos}>\r\n                                <Column style={{textAlign: 'center', width: '15%'}} field='EventoId'\r\n                                        header='ID Evento'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='Local'\r\n                                        header='Equipo Local'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='Visitante'\r\n                                        header='Equipo Visitante'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='Fecha' header='Fecha'/>\r\n                            </DataTable>\r\n                        </div>\r\n                    </TabPanel>\r\n                </TabView>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Fragment} from 'react';\r\nimport '../App.css';\r\nimport {TabPanel, TabView} from 'primereact/tabview';\r\nimport {Chart} from 'primereact/chart';\r\n\r\nconst axios = require('axios');\r\nconst apiPort = '44388';\r\nconst api = 'https://localhost:' + apiPort + '/api/';\r\n\r\nexport class ReportsView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            betsDate: [],\r\n            betsCount: [],\r\n            usersDate: [],\r\n            usersCount: [],\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBetsDate();\r\n        this.getBetsCount();\r\n        this.getUsersDate();\r\n        this.getUsersCount();\r\n    }\r\n\r\n    // Llamadas Axios\r\n    getBetsDate = () => {\r\n        axios.get(api+'Apuestas/GetFechas').then((response) => {\r\n            this.setState({betsDate: response.data});\r\n        })\r\n    }\r\n    getBetsCount = () => {\r\n        axios.get(api+'Apuestas/GetAltas').then((response) => {\r\n            this.setState({betsCount: response.data});\r\n        })\r\n    }\r\n    getUsersDate = () => {\r\n        axios.get(api+'Usuarios/GetFechas').then((response) => {\r\n            this.setState({usersDate: response.data});\r\n        })\r\n    }\r\n    getUsersCount = () => {\r\n        axios.get(api+'Usuarios/GetAltas').then((response) => {\r\n            this.setState({usersCount: response.data});\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const betsData = {\r\n            labels: this.state.betsDate,\r\n            datasets: [\r\n                {\r\n                    label: 'Apuestas',\r\n                    data: this.state.betsCount,\r\n                    fill: false,\r\n                    borderColor: '#42A5F5',\r\n                    backgroundColor: '#393e46',\r\n                }\r\n            ]\r\n        };\r\n        const usersData = {\r\n            labels: this.state.usersDate,\r\n            datasets: [\r\n                {\r\n                    label: 'Usuarios',\r\n                    data: this.state.usersCount,\r\n                    fill: false,\r\n                    borderColor: '#42A5F5',\r\n                    backgroundColor: '#393e46'\r\n                }\r\n            ]\r\n        };\r\n        const chartOptions = {\r\n            legend: {\r\n                labels: {\r\n                    fontColor: '#42A5F5'\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#00adb5'\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    ticks: {\r\n                        fontColor: '#00adb5'\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <TabView>\r\n                    <TabPanel header='Apuestas'>\r\n                        <div className='chartView'>\r\n                            <Chart className='chart' type='line' data={betsData} options={chartOptions} width='850%'/>\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel header='Usuarios'>\r\n                        <div className='chartView'>\r\n                            <Chart className='chart' type='line' data={usersData} options={chartOptions} width='850%'/>\r\n                        </div>\r\n                    </TabPanel>\r\n                </TabView>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {Fragment} from 'react';\r\nimport '../App.css';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {TabPanel, TabView} from 'primereact/tabview';\r\nimport {Toast} from 'primereact/toast';\r\nimport {createRef} from 'react';\r\n\r\nconst axios = require('axios');\r\nconst moment = require('moment');\r\nconst apiPort = '44388';\r\nconst api = 'https://localhost:' + apiPort + '/api/';\r\n\r\nexport class ClientsView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.GPEAlert = createRef();\r\n        this.state = {\r\n            clients: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getClients();\r\n    }\r\n\r\n    getClients = () => {\r\n        axios.get(api+'Clients').then((response) => {\r\n            response.data.forEach(item => {\r\n                item.RegisterDate = moment(item.RegisterDate).format('YYYY-MM-DD');\r\n                if (item.Enabled === true) {\r\n                    item.Enabled = 'Yes';\r\n                } else {\r\n                    item.Enabled = 'No';\r\n                }\r\n            });\r\n            this.setState({clients: response.data});\r\n        })\r\n    }\r\n    // filterMail = () => {\r\n    //     axios.get(api+'Usuarios/GetEmail?EmailId=' + this.state.email).then((response) => {\r\n    //         response.data.forEach(item => {\r\n    //             item.FechaAlta = moment(item.FechaAlta).format('YYYY-MM-DD');\r\n    //         });\r\n    //         this.setState({clients: response.data});\r\n    //         this.showSuccessToast();\r\n    //     })\r\n    // }\r\n    // filterName = () => {\r\n    //     axios.get(api+'Usuarios/GetNombre?Nombre=' + this.state.name).then((response) => {\r\n    //         response.data.forEach(item => {\r\n    //             item.FechaAlta = moment(item.FechaAlta).format('YYYY-MM-DD');\r\n    //         });\r\n    //         this.setState({clients: response.data});\r\n    //         this.showSuccessToast();\r\n    //     })\r\n    // }\r\n    // filterSurname = () => {\r\n    //     axios.get(api+'Usuarios/GetApellidos?Apellidos=' + this.state.surname).then((response) => {\r\n    //         response.data.forEach(item => {\r\n    //             item.FechaAlta = moment(item.FechaAlta).format('YYYY-MM-DD');\r\n    //         });\r\n    //         this.setState({clients: response.data});\r\n    //         this.showSuccessToast();\r\n    //     })\r\n    // }\r\n    // deleteUsers = () => {\r\n    //     if(this.state.email){\r\n    //         axios.delete(api+'Usuarios?EmailId=' + this.state.email).then((response) => {\r\n    //             this.showInfoSuccessToast('Usuario ' + this.state.email + ' eliminado.')\r\n    //         })\r\n    //             .then(this.resetStates)\r\n    //             .catch(error => {\r\n    //                 this.showErrorToast(error.message.toString() + '\\nCompruebe la conexión y que ha introducido correctamente los campos.');\r\n    //             });\r\n    //     }\r\n    //     else{\r\n    //         this.showErrorToast('Compruebe la conexión y que ha introducido correctamente los campos.');\r\n    //     }\r\n    // }\r\n    // changePassword = () => {\r\n    //     let pwd = {\r\n    //         OldPassword: this.state.oldPwd,\r\n    //         NewPassword: this.state.newPwd,\r\n    //         ConfirmPassword: this.state.confirmPwd\r\n    //     };\r\n    //     axios.post(api+'Account/NewPassword?Email=' + this.state.email, pwd).then((response) => {\r\n    //         this.showInfoSuccessToast('Contraseña modificada correctamente para el email:  ' + this.state.email);\r\n    //     })\r\n    //         .then(this.resetStates)\r\n    //         .catch(error => {\r\n    //             this.showErrorToast(error.message.toString() + '\\nCompruebe la conexión y que ha introducido correctamente los campos.');\r\n    //         });\r\n    // }\r\n    //\r\n    // handlerEmail = (event) => {\r\n    //     this.setState({email: event.target.value});\r\n    // }\r\n    // handlerName = (event) => {\r\n    //     this.setState({name: event.target.value});\r\n    // }\r\n    // handlerSurname = (event) => {\r\n    //     this.setState({surname: event.target.value});\r\n    // }\r\n    // handlerOldPwd = (event) => {\r\n    //     this.setState({oldPwd: event.target.value});\r\n    // }\r\n    // handlerNewPwd = (event) => {\r\n    //     this.setState({newPwd: event.target.value});\r\n    // }\r\n    // handlerConfirmPwd = (event) => {\r\n    //     this.setState({confirmPwd: event.target.value});\r\n    // }\r\n    //\r\n    // resetStates = () => {\r\n    //     this.getClients();\r\n    //     this.setState({email: ''});\r\n    //     this.setState({name: ''});\r\n    //     this.setState({surname: ''});\r\n    //     this.setState({email: ''});\r\n    //     this.setState({oldPwd: ''});\r\n    //     this.setState({newPwd: ''});\r\n    //     this.setState({confirmPwd: ''});\r\n    // }\r\n    //\r\n    // buttonFilter = () => {\r\n    //     if (this.state.email) {\r\n    //         this.filterMail();\r\n    //     }\r\n    //     if (this.state.name) {\r\n    //         this.filterName();\r\n    //     }\r\n    //     if (this.state.surname) {\r\n    //         this.filterSurname();\r\n    //     }\r\n    // }\r\n    //\r\n    // showSuccess = () => {\r\n    //     this.GPEAlert.current.show({severity: 'success', summary: 'Hecho', life: 3000});\r\n    // }\r\n    //\r\n    // showInfoSuccess = (detailValue) => {\r\n    //     this.GPEAlert.current.show({severity: 'success', summary: 'Hecho', detail: detailValue, life: 3000});\r\n    // }\r\n    //\r\n    // showError = (error) => {\r\n    //     this.GPEAlert.current.show({severity: 'error', summary: 'Error', detail: error, sticky: true});\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Toast ref={this.GPEAlert}/>\r\n                <TabView>\r\n                    <TabPanel header='Users'>\r\n                        <div className='flexCenter'>\r\n                            <InputText value={this.state.email} onChange={this.handlerEmail}\r\n                                       disabled={this.state.name || this.state.surname} placeholder='Email'\r\n                                       style={{width: '40%'}}/>\r\n                            <InputText value={this.state.name} onChange={this.handlerName}\r\n                                       disabled={this.state.email || this.state.surname} placeholder='Nombre'\r\n                                       style={{width: '20%'}}/>\r\n                            <InputText value={this.state.surname} onChange={this.handlerSurname}\r\n                                       disabled={this.state.name || this.state.email} placeholder='Apellidos'\r\n                                       style={{width: '30%'}}/>\r\n                            <Button icon='pi pi-refresh' onClick={this.resetStates}\r\n                                    className='p-button-secondary p-mr-2'\r\n                                    style={{backgroundColor: '#86AEC2'}}/>\r\n                            <Button label='Filtrar' icon='pi pi-filter' onClick={this.buttonFilter}\r\n                                    className='p-button-secondary p-mr-2' style={{width: '15%'}}/>\r\n                        </div>\r\n                        <div>\r\n                            <DataTable value={this.state.clients}>\r\n                                <Column field='ClientId' header='ClientId'\r\n                                        style={{textAlign: 'center'}}/>\r\n                                <Column field='Name' header='Name' style={{textAlign: 'center'}}/>\r\n                                <Column field='Address' header='Address'\r\n                                        style={{textAlign: 'center'}}/>\r\n                                <Column field='City' header='City' style={{textAlign: 'center'}}/>\r\n                                <Column field='Province' header='Province' style={{textAlign: 'center'}}/>\r\n                                <Column field='Phone' header='Phone' style={{textAlign: 'center'}}/>\r\n                                <Column field='NIF' header='NIF' style={{textAlign: 'center'}}/>\r\n                                <Column field='ContactName' header='ContactName' style={{textAlign: 'center'}}/>\r\n                                <Column field='RegisterDate' header='RegisterDate' style={{textAlign: 'center'}}/>\r\n                                <Column field='Enabled' header='Enabled' style={{textAlign: 'center'}}/>\r\n                            </DataTable>\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel header='New User'>\r\n                        <div className='flexCenter'>\r\n                            <InputText value={this.state.email} onChange={this.handlerEmail}\r\n                                       placeholder='Email' style={{width: '40%'}}/>\r\n                            <Button label='Eliminar' icon='pi pi-trash' onClick={this.deleteUsers}\r\n                                    className='p-button-secondary p-mr-2'/>\r\n                        </div>\r\n                        <div>\r\n                            <DataTable value={this.state.clients}>\r\n                                <Column field='EmailId' header='Email Usuario'\r\n                                        style={{textAlign: 'center', width: '30%'}}/>\r\n                                <Column field='Nombre' header='Nombre' style={{textAlign: 'center'}}/>\r\n                                <Column field='Apellidos' header='Apellidos'\r\n                                        style={{textAlign: 'center'}}/>\r\n                                <Column field='Edad' header='Edad' style={{textAlign: 'center'}}/>\r\n                                <Column field='FechaAlta' header='Fecha Registro' style={{textAlign: 'center'}}/>\r\n                            </DataTable>\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel header='Modify User'>\r\n                        <div className='pwdArea'>\r\n                            <InputText value={this.state.email} onChange={this.handlerEmail}\r\n                                       placeholder='Email'/>\r\n                            <InputText type='password' value={this.state.oldPwd} onChange={this.handlerOldPwd}\r\n                                       placeholder='Contraseña anterior'/>\r\n                            <InputText type='password' value={this.state.newPwd} onChange={this.handlerNewPwd}\r\n                                       placeholder='Contraseña nueva'/>\r\n                            <InputText type='password' value={this.state.confirmPwd} onChange={this.handlerConfirmPwd}\r\n                                       placeholder='Confirmar contraseña'/>\r\n                            <Button label='Confirmar' onClick={this.changePassword}\r\n                                    className='p-button-secondary p-mr-2'/>\r\n                        </div>\r\n                    </TabPanel>\r\n                </TabView>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {createRef, Fragment} from 'react';\r\nimport '../App.css';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\nimport {TabPanel, TabView} from 'primereact/tabview';\r\nimport {Toast} from 'primereact/toast';\r\n\r\nconst axios = require('axios');\r\nconst apiPort = '44388';\r\nconst api = 'https://localhost:' + apiPort + '/api/';\r\n\r\nexport class EmployeesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.GPEAlert = createRef();\r\n        this.state = {\r\n            employees: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployees();\r\n    }\r\n\r\n    getEmployees = () => {\r\n        axios.get(api + 'Employee').then((response) => {\r\n            response.data.forEach(item => {\r\n                if (item.Enabled === true) {\r\n                    item.Enabled = 'Yes';\r\n                } else {\r\n                    item.Enabled = 'No';\r\n                }\r\n            });\r\n            this.setState({employees: response.data});\r\n        })\r\n    }\r\n    // getMarkets = () => {\r\n    //     axios.get(api+'Mercados').then((response) => {\r\n    //         response.data.forEach(item => {\r\n    //             if (item.Bloqueado === true) {\r\n    //                 item.Bloqueado = 'Si';\r\n    //             } else {\r\n    //                 item.Bloqueado = 'No';\r\n    //             }\r\n    //             item.DineroOver += '€';\r\n    //             item.DineroUnder += '€';\r\n    //         });\r\n    //         this.setState({markets: response.data});\r\n    //     })\r\n    // }\r\n    //\r\n    // filterMail = () => {\r\n    //     axios.get(api+'Apuestas/GetEmail?UsuarioId=' + this.state.userId).then((response) => {\r\n    //         response.data.forEach(item => {\r\n    //             item.FechaApuesta = moment(item.FechaApuesta).format('YYYY-MM-DD');\r\n    //             item.DineroApostado = item.DineroApostado + '€';\r\n    //         })\r\n    //         this.setState({employees: response.data});\r\n    //         this.showSuccessToast();\r\n    //     })\r\n    // }\r\n    // filterMarket = () => {\r\n    //     axios.get(api+'Apuestas/GetMercado?MercadoId=' + this.state.marketId).then((response) => {\r\n    //         response.data.forEach(item => {\r\n    //             item.FechaApuesta = moment(item.FechaApuesta).format('YYYY-MM-DD');\r\n    //             item.DineroApostado = item.DineroApostado + '€';\r\n    //         })\r\n    //         this.setState({employees: response.data});\r\n    //         this.showSuccessToast();\r\n    //     })\r\n    // }\r\n    // filterEvent = () => {\r\n    //     axios.get(api+'Apuestas/GetEvento?EventoId=' + this.state.eventId).then((response) => {\r\n    //         response.data.forEach(item => {\r\n    //             item.FechaApuesta = moment(item.FechaApuesta).format('YYYY-MM-DD');\r\n    //             item.DineroApostado = item.DineroApostado + '€';\r\n    //         })\r\n    //         this.setState({employees: response.data});\r\n    //         this.showSuccessToast();\r\n    //     })\r\n    // }\r\n    // createMarkets = () => {\r\n    //     axios.post(api+'Mercados?EventoId=' + this.state.eventId).then(() => {\r\n    //         this.showInfoSuccessToast('Mercados para el evento ' + this.state.eventId + ' creados');\r\n    //         this.resetStates();\r\n    //         this.getMarkets();\r\n    //     })\r\n    //         .catch(error => {\r\n    //             this.showErrorToast(error.message.toString() + '\\nCompruebe la conexión y que haya introducido el ID de Evento para realizar la inserción de nuevos mercados');\r\n    //         });\r\n    // }\r\n    // lockMarket = () => {\r\n    //     axios.get(api+'Mercados/Locked?MercadoId=' + this.state.marketId).then((response) => {\r\n    //         if (response.data.Bloqueado) {\r\n    //             this.showErrorToast('Este mercado ya esta bloqueado');\r\n    //             this.resetStates();\r\n    //         } else {\r\n    //             axios.put(api+'Mercados/Lock?MercadoId=' + this.state.marketId).then(() => {\r\n    //                 this.showInfoSuccessToast('Mercado ' + this.state.marketId + ' bloqueado');\r\n    //                 this.resetStates();\r\n    //                 this.getMarkets();\r\n    //             })\r\n    //                 .catch(error => {\r\n    //                     this.showErrorToast(error.message.toString() + '\\nCompruebe la conexión y que ha introducido el ID de Mercado a bloquear correcto.');\r\n    //                 });\r\n    //         }\r\n    //     });\r\n    // }\r\n    // unlockMarket = () => {\r\n    //     axios.get(api+'Mercados/Locked?MercadoId=' + this.state.marketId).then((response) => {\r\n    //         if (!response.data.Bloqueado) {\r\n    //             this.showErrorToast('Este mercado ya esta desbloqueado');\r\n    //             this.resetStates();\r\n    //         } else {\r\n    //             axios.put(api+'Mercados/Unlock?MercadoId=' + this.state.marketId).then(() => {\r\n    //                 this.showInfoSuccessToast('Mercado ' + this.state.marketId + ' desbloqueado');\r\n    //                 this.resetStates();\r\n    //                 this.getMarkets();\r\n    //             })\r\n    //                 .catch(error => {\r\n    //                     this.showErrorToast(error.message.toString() + '\\nCompruebe la conexión y que ha introducido el ID de Mercado a desbloquear correcto.');\r\n    //                 });\r\n    //         }\r\n    //     });\r\n    // }\r\n    //\r\n    // handlerEmail = (event) => {\r\n    //     this.setState({userId: event.target.value});\r\n    // }\r\n    // handlerMarketId = (event) => {\r\n    //     this.setState({marketId: event.target.value});\r\n    // }\r\n    // handlerEventId = (event) => {\r\n    //     this.setState({eventId: event.target.value});\r\n    // }\r\n    //\r\n    // resetStates = () => {\r\n    //     this.getEmployees();\r\n    //     this.setState({userId: ''});\r\n    //     this.setState({marketId: ''});\r\n    //     this.setState({eventId: ''});\r\n    // }\r\n    //\r\n    // filterButton = () => {\r\n    //     if (this.state.userId) {\r\n    //         this.filterMail();\r\n    //     }\r\n    //     if (this.state.marketId) {\r\n    //         this.filterMarket();\r\n    //     }\r\n    //     if (this.state.eventId) {\r\n    //         this.filterEvent();\r\n    //     }\r\n    // }\r\n    //\r\n    // showSuccess = () => {\r\n    //     this.GPEAlert.current.show({severity: 'success', summary: 'Hecho', life: 3000});\r\n    // }\r\n    //\r\n    // showInfoSuccess = (detailValue) => {\r\n    //     this.GPEAlert.current.show({severity: 'success', summary: 'Hecho', detail: detailValue, life: 3000});\r\n    // }\r\n    //\r\n    // showError = (error) => {\r\n    //     this.GPEAlert.current.show({severity: 'error', summary: 'Error', detail: error, sticky: true});\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Toast ref={this.GPEAlert}/>\r\n                <TabView>\r\n                    <TabPanel header='Employees Filter'>\r\n                        <div className='flexCenter'>\r\n                            <InputText value={this.state.userId} onChange={this.handlerEmail}\r\n                                       disabled={this.state.marketId || this.state.eventId} placeholder='Email'\r\n                                       style={{width: '40%'}}/>\r\n                            <InputText value={this.state.marketId} onChange={this.handlerMarketId}\r\n                                       disabled={this.state.userId || this.state.eventId} placeholder='Id Mercado'/>\r\n                            <InputText value={this.state.eventId} onChange={this.handlerEventId}\r\n                                       disabled={this.state.marketId || this.state.userId}\r\n                                       placeholder='ID Evento' style={{width: '15%'}}/>\r\n                            <Button label='Actualizar' icon='pi pi-refresh' onClick={this.resetStates}\r\n                                    className='p-button-secondary p-mr-2'\r\n                                    style={{backgroundColor: '#86AEC2'}}/>\r\n                            <Button label='Filtrar' icon='pi pi-filter' onClick={this.filterButton}\r\n                                    className='p-button-secondary p-mr-2'/>\r\n                        </div>\r\n                        <div>\r\n                            <DataTable value={this.state.employees}>\r\n                                <Column style={{textAlign: 'center', width: '12%'}} field='EmployeeId'\r\n                                        header='EmployeeId'/>\r\n                                <Column style={{textAlign: 'center', width: '9%'}} field='Name' header='Name'/>\r\n                                <Column style={{textAlign: 'center', width: '11%'}} field='Type'\r\n                                        header='Type'/>\r\n                                <Column style={{textAlign: 'center', width: '8%'}} field='Enabled' header='Enabled'/>\r\n                            </DataTable>\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel header='New Employees'>\r\n                        <div className='flexCenter'>\r\n                            <div className='marketsInputs'>\r\n                                <InputText value={this.state.eventId} onChange={this.handlerEventId}\r\n                                           disabled={this.state.marketId}\r\n                                           placeholder='ID Evento' style={{width: '220px'}}/>\r\n                                <div className='flexCenter'>\r\n                                    <Button label='Crear Mercados' icon='pi pi-plus' onClick={this.createMarkets}\r\n                                            className='p-button-secondary p-mr-2' style={{width: '220px'}}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className='marketsInputs'>\r\n                                <InputText value={this.state.marketId} onChange={this.handlerMarketId}\r\n                                           disabled={this.state.eventId}\r\n                                           placeholder='Id de mercado' style={{width: '270px'}}/>\r\n                                <div className='flexCenter'>\r\n                                    <Button label='Bloquear' icon='pi pi-lock' onClick={this.lockMarket}\r\n                                            className='p-button-secondary p-mr-2' style={{backgroundColor: '#CA3C25'}}/>\r\n                                    <Button label='Desbloquear' icon='pi pi-unlock' onClick={this.unlockMarket}\r\n                                            className='p-button-secondary p-mr-2'\r\n                                            style={{backgroundColor: '#77FF94', color: 'black'}}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <DataTable value={this.state.markets}>\r\n                                <Column style={{textAlign: 'center', width: '14%'}} field='MercadoId'\r\n                                        header='ID Mercado'/>\r\n                                <Column style={{textAlign: 'center', width: '10%'}} field='OverUnder'\r\n                                        header='Tipo Mercado'/>\r\n                                <Column style={{textAlign: 'center'}} field='CuotaOver' header='Cuota Over'/>\r\n                                <Column style={{textAlign: 'center'}} field='CuotaUnder' header='Cuota Under'/>\r\n                                <Column style={{textAlign: 'center'}} field='DineroOver' header='Dinero Over'/>\r\n                                <Column style={{textAlign: 'center'}} field='DineroUnder' header='Dinero Under'/>\r\n                                <Column style={{textAlign: 'center', width: '14%'}} field='Bloqueado'\r\n                                        header='Bloqueado'/>\r\n                                <Column style={{textAlign: 'center', width: '12%'}} field='EventoId'\r\n                                        header='ID Evento'/>\r\n                            </DataTable>\r\n                        </div>\r\n                    </TabPanel>\r\n                </TabView>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport {createRef, Fragment} from 'react';\r\nimport '../App.css';\r\nimport {TabPanel, TabView} from 'primereact/tabview';\r\nimport {Toast} from \"primereact/toast\";\r\nimport {InputText} from \"primereact/inputtext\";\r\nimport {Button} from \"primereact/button\";\r\nimport {DataTable} from \"primereact/datatable\";\r\nimport {Column} from \"primereact/column\";\r\n\r\nconst axios = require('axios');\r\nconst moment = require('moment');\r\nconst apiPort = '44388';\r\nconst api = 'https://localhost:' + apiPort + '/api/';\r\n\r\nexport class OrdersView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.GPEAlert = createRef();\r\n        this.state = {\r\n            orders: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getOrders();\r\n    }\r\n\r\n    getOrders = () => {\r\n        axios.get(api + 'Orders').then((response) => {\r\n            response.data.forEach(item => {\r\n                item.Date = moment(item.Date).format('YYYY-MM-DD');\r\n                item.DeriveryDate = moment(item.Date).format('YYYY-MM-DD');\r\n                if (item.Delivered === true) {\r\n                    item.Delivered = 'Yes';\r\n                } else {\r\n                    item.Delivered = 'No';\r\n                }\r\n                if (item.Paid === true) {\r\n                    item.Paid = 'Yes';\r\n                } else {\r\n                    item.Paid = 'No';\r\n                }\r\n            });\r\n            this.setState({orders: response.data});\r\n        })\r\n    }\r\n\r\n    // showSuccess = () => {\r\n    //     this.GPEAlert.current.show({severity: 'success', summary: 'Hecho', life: 3000});\r\n    // }\r\n    //\r\n    // showInfoSuccess = (detailValue) => {\r\n    //     this.GPEAlert.current.show({severity: 'success', summary: 'Hecho', detail: detailValue, life: 3000});\r\n    // }\r\n    //\r\n    // showError = (error) => {\r\n    //     this.GPEAlert.current.show({severity: 'error', summary: 'Error', detail: error, sticky: true});\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Toast ref={this.GPEAlert}/>\r\n                <TabView>\r\n                    <TabPanel header='Orders'>\r\n                        <div className='flexCenter'>\r\n                            <InputText value={this.state.local} onChange={this.handlerLocal}\r\n                                       placeholder='Equipo local'/>\r\n                            <InputText value={this.state.visitant} onChange={this.handlerVisitant}\r\n                                       placeholder='Equipo visitante'/>\r\n                            <InputText value={this.state.date} onChange={this.handlerDate} disabled={this.state.eventId}\r\n                                       placeholder='Fecha: 2000-01-01 00:00:00' style={{width: '230px'}}/>\r\n                            <Button label='Actualizar' icon='pi pi-refresh' onClick={this.resetStates}\r\n                                    className='p-button-secondary p-mr-2'\r\n                                    style={{backgroundColor: '#86AEC2'}}/>\r\n                            <Button label='Filtrar' icon='pi pi-filter' onClick={this.filterButton}\r\n                                    className='p-button-secondary p-mr-2'/>\r\n                        </div>\r\n                        <div>\r\n                            <DataTable value={this.state.orders}>\r\n                                <Column style={{textAlign: 'center', width: '15%'}} field='OrderId'\r\n                                        header='OrderId'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='ClientId'\r\n                                        header='ClientId'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='OrderNum'\r\n                                        header='OrderNum'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='Date'\r\n                                        header='Date'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='DeriveryDate'\r\n                                        header='DeriveryDate'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='ContactName'\r\n                                        header='ContactName'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='Total'\r\n                                        header='Total'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='Delivered' header='Delivered'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='Paid' header='Paid'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='PayingMethod' header='PayingMethod'/>\r\n                                <Column style={{textAlign: 'center', width: '25%'}} field='EmployeeId' header='EmployeeId'/>\r\n                            </DataTable>\r\n                        </div>\r\n                    </TabPanel>\r\n                </TabView>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\r\nimport 'primereact/resources/themes/arya-blue/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport * as React from 'react';\r\nimport {HashRouter, NavLink, Route, Switch} from 'react-router-dom';\r\nimport {LotsView} from './components/LotsView';\r\nimport {ArticlesView} from './components/ArticlesView';\r\nimport {ReportsView} from './components/ReportsView';\r\nimport {ClientsView} from './components/ClientsView';\r\nimport {EmployeesView} from \"./components/EmployeesView\";\r\nimport {OrdersView} from \"./components/OrdersView\";\r\n\r\nexport default class App extends React.Component {\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <div className='container'>\r\n                    <div className='menu'>\r\n                        <nav>\r\n                            <div>\r\n                                <NavLink to='/articles' activeClassName='selectedLink' className='navLink'>\r\n                                    Articles\r\n                                </NavLink>\r\n                            </div>\r\n                            <div>\r\n                                <NavLink to='/lots' activeClassName='selectedLink' className='navLink'>\r\n                                    Lots\r\n                                </NavLink>\r\n                            </div>\r\n                            <div>\r\n                                <NavLink to='/orders' activeClassName='selectedLink' className='navLink'>\r\n                                    Orders\r\n                                </NavLink>\r\n                            </div>\r\n                            <div>\r\n                                <NavLink to='/clients' activeClassName='selectedLink' className='navLink'>\r\n                                    Clients\r\n                                </NavLink>\r\n                            </div>\r\n                            <div>\r\n                                <NavLink to='/employees' activeClassName='selectedLink' className='navLink'>\r\n                                    Employees\r\n                                </NavLink>\r\n                            </div>\r\n                            <div>\r\n                                <NavLink to='/reports' activeClassName='selectedLink' className='navLink'>\r\n                                    Reports\r\n                                </NavLink>\r\n                            </div>\r\n                        </nav>\r\n                    </div>\r\n                    <div className='mainWindow'>\r\n                        <Switch>\r\n                            <Route path='/articles'>\r\n                                <ArticlesView/>\r\n                            </Route>\r\n                            <Route path='/lots'>\r\n                                <LotsView/>\r\n                            </Route>\r\n                            <Route path='/orders'>\r\n                                <OrdersView/>\r\n                            </Route>\r\n                            <Route path='/clients'>\r\n                                <ClientsView/>\r\n                            </Route>\r\n                            <Route path='/employees'>\r\n                                <EmployeesView/>\r\n                            </Route>\r\n                            <Route path='/reports'>\r\n                                <ReportsView/>\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}